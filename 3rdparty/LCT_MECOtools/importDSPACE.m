% This file is part of LCToolbox.
% (c) Copyright 2018 - MECO Research Team, KU Leuven. 
%
% LCToolbox is free software: you can redistribute it and/or modify
% it under the terms of the GNU Lesser General Public License as published 
% by the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% LCToolbox is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU Lesser General Public License for more details.
% 
% You should have received a copy of the GNU Lesser General Public License
% along with LCToolbox. If not, see <http://www.gnu.org/licenses/>.

function meas  = importDSPACE(file, inputSignal, periodicity, varargin)
%IMPORTDSPACE Imports data from a *.mat-file generated by dSPACE
%ControlDesk to the new toolbox style. Developed for the Advanced AnalyticModel 
%Based Control course (August 2017). 

    % Input checks
    % ============
    
    assert(isa(path,'char'),'The path should be a string.'); 
    assert(isa(inputSignal,'TimeSignal'),'Your input signal must be a TimeSignal object.');
    assert(periodicity==true || periodicity==false, 'The periodicity flag can only be true or false.');

    info = '';
    if nargin > 3
        if ~isa(varargin{1},'char'); error('Additional information should be provided in string format.'); end;
        info = varargin{1};
    else if nargin > 4
            error('Too many input arguments.');
         end
    end
    
    % Parse the file
    % ==============
    
    [~, name, ext] = fileparts(file);
    assert(strcmp(ext,'.mat'),'Your file is not a *.mat-file!');
    file = load(file);
    expstruct = file.(name);
    label = name;
    
    % time
    time = expstruct.X.Data';

    % check whether crane or linear slide
    labels = {expstruct.Y.Name};
    labels = ['time (s)' labels];
    cond1 = sum(sum(cellfun(@isempty, [strfind(labels,'MOTOR') ; strfind(labels,'LOAD') ; strfind(labels,'CURRENT')]),2)==length(labels),1)==0;
    cond2 = sum(sum(cellfun(@isempty, [strfind(labels,'Input Speed') ; strfind(labels,'Angle (deg)') ; strfind(labels,'Position (mm)')]),2)==length(labels),1)==0;
    assert(cond1 || cond2, 'I could not detect data originating from the overhead crane or the linear slide. Did you change the default labels in dSPACE ControlDesk?');
    
    % retrieve the data
    data = cell2mat(cellfun(@transpose,{expstruct.Y.Data},'un',0));
    data = [time data];
    
    % the date
    try
        date = datetime(expstruct.Description.General.DateTime,'InputFormat','dd/MM/yyyy hh:mm:ss');
    catch
        date = expstruct.Description.General.DateTime;
    end
    
    % Cast into a TDMeasurementData-object
    meas = TDMeasurementData('label',label,'excitation',inputSignal,'data',data,'datalabels',labels,'date',date,'info',info,'periodic',periodicity);

end

